{"createdAt":"2025-03-14T02:59:29.086Z","updatedAt":"2025-03-16T03:59:45.952Z","id":"doVBiOt1sEYlqLj7","name":"DORA RAG Agent Inmigrations Agent","active":true,"nodes":[{"parameters":{"options":{}},"id":"2eb97105-5233-438a-b3d7-55d2110779d5","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1,"position":[-760,280],"credentials":{"openAiApi":{"id":"Xhw7jhGubqs4BVIn","name":"OpenAi ai_agent"}}},{"parameters":{"content":"## Agent Tools for RAG","height":469,"width":683,"color":5},"id":"536e1035-860d-4a84-894b-faa530877db0","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[240,-20]},{"parameters":{},"id":"5d79b9d8-a82d-4305-a3fb-088996a3af7f","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1,"position":[-620,280],"notesInFlow":false,"credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"content":"## RAG AI Agent with Chat Interface","height":465,"width":1236,"color":4},"id":"04bc3155-a419-4da8-a4ae-cab8bb861fd6","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1080,-20]},{"parameters":{"options":{}},"id":"efe4e8c4-4dde-4c3f-afb3-cce10848d62a","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[-100,0]},{"parameters":{"assignments":{"assignments":[{"id":"9a9a245e-f1a1-4282-bb02-a81ffe629f0f","name":"chatInput","value":"={{ $json?.chatInput || $json.body.chatInput }}","type":"string"},{"id":"b80831d8-c653-4203-8706-adedfdb98f77","name":"sessionId","value":"={{ $json?.sessionId || $json.body.sessionId}}","type":"string"}]},"options":{}},"id":"c4e47fa7-2348-499f-af55-da5f0fc2f06c","name":"Edit Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-620,60]},{"parameters":{"public":true,"initialMessages":"Hello! 👋\nI'm Mila,(Migration Information Legal Assistant) your legal assistant specializing in immigration processes. I'm here to help you with any questions about asylum applications, family petitions, and other immigration procedures. How can I assist you today?","options":{"loadPreviousSession":"memory","subtitle":"=We're here to help you 24/7, powered by our dedicated team of immigration experts. 𝐓𝐡𝐢𝐬 𝐢𝐬 𝐚 𝐝𝐞𝐦𝐨 𝐜𝐫𝐞𝐚𝐭𝐞𝐝 𝐛𝐲 𝐲𝐨𝐮𝐜𝐡𝐚𝐭𝐛𝐨𝐭.𝐢𝐨 𝐛𝐲 𝐌𝐨𝐝𝐭𝐞𝐜𝐬, 𝐍𝐎𝐓 𝐀 𝐅𝐈𝐍𝐀𝐋 𝐏𝐑𝐎𝐃𝐔𝐂𝐓.","title":"Your Immigration Assistant"}},"id":"e0a37bf1-fde2-4f9f-b2d8-5ab5ae206983","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-980,60],"webhookId":"1337046b-faca-45ad-bb9b-5765090f541e"},{"parameters":{"httpMethod":"POST","path":"17780d70-5de1-4b3c-be5c-bbf13f18be02","responseMode":"responseNode","options":{}},"id":"f3cd8ce9-b028-4d96-b205-2dcf260681f4","name":"Webhook","type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-960,260],"webhookId":"17780d70-5de1-4b3c-be5c-bbf13f18be02"},{"parameters":{"promptType":"define","text":"={{ $json.chatInput }}","options":{"systemMessage":"You are a legal advisor specializing in immigration processes. Your primary objective is to assist users by drafting immigration case documents based on the context provided. You have access to a comprehensive corpus of legal documents and data sources stored in your database.\n\nKey Responsibilities:\nAnswer Questions: Provide accurate information regarding various immigration processes, including family-based petitions, asylum applications, and other relevant categories.\n\nContextual Drafting: Use the context provided by users to draft case documents or responses that align with their specific immigration situations.\n\nRAG and SQL Integration:\n\nStart by performing Retrieval-Augmented Generation (RAG) to find relevant information in the 'documents' table.\nIf the question requires specific data analysis (e.g., fetching sums, finding maximum values), utilize SQL queries on the 'document_rows' table.\nIf RAG does not yield sufficient information, consult the 'document_metadata' table to identify relevant documents and analyze their content.\nFor reference inquiries, execute SQL queries on the 'document_references' table to retrieve specific reference texts based on the document ID and page number.\nUse Exact Language: When providing information, use the exact wording and details from the source documents to ensure accuracy, including specific forms, laws, and policies.\n\nHighlight Changes: Clearly indicate any sections that have been superseded or updated, along with the relevant dates and new references.\n\nInternal References Only: Always provide references to the specific pages or sections within the vectorized documents in the database. Avoid using external links or references that are not part of the database.\n\nUser Interaction:\nMaintain a professional and empathetic tone, recognizing the sensitive nature of immigration cases.\nEncourage users to provide as much detail as possible about their situation to give the most accurate guidance.\nAlways inform the user if you did not find the answer, and avoid fabricating information. If you do not know something, clearly communicate that to the user.\nIf you need to clarify any aspect of the immigration process or have specific questions about the legal documents, feel free to ask."}},"id":"43dfe147-4355-4b07-89a5-0ab2642c0eea","name":"RAG AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[-440,60]},{"parameters":{"content":"## Run Each Node Once to Set Up Database Tables","height":1120,"width":400,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-1520,80],"typeVersion":1,"id":"e54d6a68-5f57-4677-a704-3dbb7796580e","name":"Sticky Note3"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_metadata (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    url TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    schema TEXT\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1380,420],"id":"440914ca-e2b1-4076-a4c7-67023f737073","name":"Create Document Metadata Table","credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_rows (\n    id SERIAL PRIMARY KEY,\n    dataset_id TEXT REFERENCES document_metadata(id),\n    row_data JSONB  -- Store the actual row data\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1380,660],"id":"72640cf3-4c78-40c0-aa69-3d9da48e51af","name":"Create Document Rows Table (for Tabular Data)","credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Use this tool to fetch all available documents, including the table schema if the file is a CSV or Excel file.","operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"returnAll":true,"options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-480,280],"id":"48bb642f-e219-4bbd-bbd7-97d470921250","name":"List Documents","credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Given a file ID, fetches the text from the document.","operation":"executeQuery","query":"SELECT \n    string_agg(content, ' ') as document_text\nFROM documents\n  WHERE metadata->>'file_id' = $1\nGROUP BY metadata->>'file_id';","options":{"queryReplacement":"={{ $fromAI('file_id') }}"}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-340,280],"id":"ac8e3074-6efa-4f7c-a4f1-f9adce86bc7a","name":"Get File Contents","credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Run a SQL query - use this to query from the document_rows table once you know the file ID you are querying. dataset_id is the file_id and you are always using the row_data for filtering, which is a jsonb field that has all the keys from the file schema given in the document_metadata table.\n\nExample query:\n\nSELECT AVG((row_data->>'revenue')::numeric)\nFROM document_rows\nWHERE dataset_id = '123';\n\nExample query 2:\n\nSELECT \n    row_data->>'category' as category,\n    SUM((row_data->>'sales')::numeric) as total_sales\nFROM dataset_rows\nWHERE dataset_id = '123'\nGROUP BY row_data->>'category';","operation":"executeQuery","query":"{{ $fromAI('sql_query') }}","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-200,280],"id":"3f36f063-cb4b-4ef3-b38f-451e4bdb82fe","name":"Query Document Rows","credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"mode":"retrieve-as-tool","toolName":"documents","toolDescription":"Use RAG to look up information in the knowledgebase.","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[440,120],"id":"79f44be1-643d-456e-bfb6-3cc23cb39b9b","name":"Supabase Vector Store1","credentials":{"supabaseApi":{"id":"CuhGSK9VpbyZF6T4","name":"Supabase RAG Vector"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[380,260],"id":"4b0d361a-ddb2-4f5a-9b62-598a79359315","name":"Embeddings OpenAI2","credentials":{"openAiApi":{"id":"Xhw7jhGubqs4BVIn","name":"OpenAi ai_agent"}}},{"parameters":{"operation":"executeQuery","query":"-- Enable the pgvector extension to work with embedding vectors if you need that\n-- create extension vector;\n\n-- Create a table to store your documents\n-- create table documents (\n  -- id bigserial primary key,\n  -- content text, -- corresponds to Document.pageContent\n  -- metadata jsonb, -- corresponds to Document.metadata\n  -- embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n-- );\n\n-- Create a function to search for documents\ncreate function match_documents (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1380,200],"id":"98af23a0-ac4f-4f41-b9f1-78df92822f25","name":"Create Documents Table and Match Function","credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"content":"## 🚀 Ultimate n8n Agentic RAG Template\n\n**Author:** [Cole Medin](https://www.youtube.com/@ColeMedin)\n\n## What is this?\nThis template provides a complete implementation of an **Agentic RAG (Retrieval Augmented Generation)** system in n8n that can be extended easily for your specific use case and knowledge base. Unlike standard RAG which only performs simple lookups, this agent can reason about your knowledge base, self-improve retrieval, and dynamically switch between different tools based on the specific question.\n\n## Why Agentic RAG?\nStandard RAG has significant limitations:\n- Poor analysis of numerical/tabular data\n- Missing context due to document chunking\n- Inability to connect information across documents\n- No dynamic tool selection based on question type\n\n## What makes this template powerful:\n- **Intelligent tool selection**: Switches between RAG lookups, SQL queries, or full document retrieval based on the question\n- **Complete document context**: Accesses entire documents when needed instead of just chunks\n- **Accurate numerical analysis**: Uses SQL for precise calculations on spreadsheet/tabular data\n- **Cross-document insights**: Connects information across your entire knowledge base\n- **Multi-file processing**: Handles multiple documents in a single workflow loop\n- **Efficient storage**: Uses JSONB in Supabase to store tabular data without creating new tables for each CSV\n\n## Getting Started\n1. Run the table creation nodes first to set up your database tables in Supabase\n2. Upload your documents through Google Drive (or swap out for a different file storage solution)\n3. The agent will process them automatically (chunking text, storing tabular data in Supabase)\n4. Start asking questions that leverage the agent's multiple reasoning approaches\n\n## Customization\nThis template provides a solid foundation that you can extend by:\n- Tuning the system prompt for your specific use case\n- Adding document metadata like summaries\n- Implementing more advanced RAG techniques\n- Optimizing for larger knowledge bases\n\n---\n\nI do intend on making a local version of this agent very soon!","height":1320,"width":540,"color":6},"type":"n8n-nodes-base.stickyNote","position":[-2100,80],"typeVersion":1,"id":"79ef02ca-682d-4b7c-a497-7a1babee9e13","name":"Sticky Note9"},{"parameters":{"content":"### first version prompt AI agent RAG \n\nYou are a personal assistant who helps answer questions from a corpus of documents. The documents are either text based (Txt, docs, extracted PDFs, etc.) or tabular data (CSVs or Excel documents).\n\nYou are given tools to perform RAG in the 'documents' table, look up the documents available in your knowledge base in the 'document_metadata' table, extract all the text from a given document, and query the tabular files with SQL in the 'document_rows' table.\n\nAlways start by performing RAG unless the question requires a SQL query for tabular data (fetching a sum, finding a max, something a RAG lookup would be unreliable for). If RAG doesn't help, then look at the documents that are available to you, find a few that you think would contain the answer, and then analyze those.\n\nAlways tell the user if you didn't find the answer. Don't make something up just to please them.","height":360,"width":740},"type":"n8n-nodes-base.stickyNote","position":[1920,140],"typeVersion":1,"id":"f0723049-c4d9-4928-a81a-3e0d67994271","name":"Sticky Note4"},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.data || $json.text || $json.concatenated_data }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID1').first().json.file_id }}"},{"name":"file_title","value":"={{ $('Set File ID1').first().json.file_title }}"}]}}},"id":"d59e9923-c9e1-416a-8c2d-b7551f55395c","name":"Default Data Loader1","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[2280,1640]},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"25a674fa-1563-4b87-9d7e-6ede3ba96a4d","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1,"position":[1540,1800],"credentials":{"openAiApi":{"id":"Xhw7jhGubqs4BVIn","name":"OpenAi ai_agent"}}},{"parameters":{"content":"## Tool to Add a Google Drive File to Vector DB","height":1467,"width":3753,"color":7},"id":"3a89ba56-f6ce-416f-96ca-8ca2305beed2","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1080,560]},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $('Set File ID1').item.json.file_id }}","mode":"id"},"options":{"googleFileConversion":{"conversion":{"docsToFormat":"text/plain"}}}},"id":"b83493f7-2671-4d18-b7da-d1cb1c896c21","name":"Download File1","type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-500,1180],"executeOnce":true,"credentials":{"googleDriveOAuth2Api":{"id":"5LP9aPOCoDSbZsTa","name":"Google Drive account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1wppg3mDF8-z_TGOI-gEJ2f3k9rZv-8ME","mode":"list","cachedResultName":"Dora Contadora Business","cachedResultUrl":"https://drive.google.com/drive/folders/1wppg3mDF8-z_TGOI-gEJ2f3k9rZv-8ME"},"event":"fileCreated","options":{}},"id":"045ec118-95fa-490a-b486-daecd5bf046c","name":"File Created1","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-940,660],"credentials":{"googleDriveOAuth2Api":{"id":"5LP9aPOCoDSbZsTa","name":"Google Drive account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1HtaIIK3kWwjbwhsmEbtJ-upalxVn3Ek9","mode":"list","cachedResultName":"n8n Documents","cachedResultUrl":"https://drive.google.com/drive/folders/1HtaIIK3kWwjbwhsmEbtJ-upalxVn3Ek9"},"event":"fileUpdated","options":{}},"id":"09c1bf34-05fe-4878-8d56-3d9293e75bc3","name":"File Updated1","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-940,860],"credentials":{"googleDriveOAuth2Api":{"id":"5LP9aPOCoDSbZsTa","name":"Google Drive account"}}},{"parameters":{"operation":"text","options":{}},"id":"f203d4ad-1bb2-4409-9077-21eefef0db48","name":"Extract Document Text1","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[680,1440],"alwaysOutputData":true},{"parameters":{"operation":"delete","tableId":"documents","filterType":"string","filterString":"=metadata->>file_id=like.*{{ $json.file_id }}*"},"id":"72169312-dcbc-4077-b125-f753f55b3958","name":"Delete Old Doc Rows1","type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-100,680],"alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"CuhGSK9VpbyZF6T4","name":"Supabase RAG Vector"}}},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.id }}","type":"string"},{"id":"f4536df5-d0b1-4392-bf17-b8137fb31a44","name":"file_type","value":"={{ $json.mimeType }}","type":"string"},{"id":"77d782de-169d-4a46-8a8e-a3831c04d90f","name":"file_title","value":"={{ $json.name }}","type":"string"},{"id":"9bde4d7f-e4f3-4ebd-9338-dce1350f9eab","name":"file_url","value":"={{ $json.webViewLink }}","type":"string"}]},"options":{}},"id":"35c6851b-114c-4c32-a2da-63ac414fc62f","name":"Set File ID1","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-320,680]},{"parameters":{"operation":"pdf","options":{}},"id":"a7a2f4fd-c0dd-485b-8719-c47b94dba2ea","name":"Extract PDF Text1","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[660,880]},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"297989c0-94c8-41fc-a825-cfa5398ca7a4","name":"Aggregate1","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[1040,980]},{"parameters":{},"id":"f8b0dade-ff82-4d33-ac51-424edf8c2f27","name":"Character Text Splitter1","type":"@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter","typeVersion":1,"position":[2420,1820]},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"concatenate","field":"data"}]},"options":{}},"id":"88823850-9237-4f6f-940b-e65a1e1955e6","name":"Summarize1","type":"n8n-nodes-base.summarize","typeVersion":1,"position":[1220,980]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"application/pdf","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"2ae7faa7-a936-4621-a680-60c512163034","leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"fc193b06-363b-4699-a97d-e5a850138b0e","leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"=application/vnd.google-apps.spreadsheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"b69f5605-0179-4b02-9a32-e34bb085f82d","leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"application/vnd.google-apps.document","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{"fallbackOutput":3}},"id":"bfb08a7d-3fdf-434d-8a78-65aa2fed12d5","name":"Switch1","type":"n8n-nodes-base.switch","typeVersion":3,"position":[-280,1160]},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"id":"486b1a1f-c973-4646-8379-a463b8d2730c","name":"Insert into Supabase Vectorstore1","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[1840,1500],"credentials":{"supabaseApi":{"id":"CuhGSK9VpbyZF6T4","name":"Supabase RAG Vector"}}},{"parameters":{"operation":"xlsx","options":{}},"id":"1bb901eb-1e4f-4714-ad96-99ffd2f9fa55","name":"Extract from Excel1","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[680,1080]},{"parameters":{"assignments":{"assignments":[{"id":"f422e2e0-381c-46ea-8f38-3f58c501d8b9","name":"schema","value":"={{ $('Extract from Excel1').isExecuted ? $('Extract from Excel1').first().json.keys().toJsonString() : $('Extract from CSV1').first().json.keys().toJsonString() }}","type":"string"},{"id":"bb07c71e-5b60-4795-864c-cc3845b6bc46","name":"data","value":"={{ $json.concatenated_data }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1460,980],"id":"850aa67c-9190-42a0-9412-0e5fa0e3a29f","name":"Set Schema1"},{"parameters":{"options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[680,1260],"id":"35692236-8b53-49c4-838e-4124d89f2dcb","name":"Extract from CSV1"},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-580,660],"id":"8cf4ed57-6d65-4142-aa20-516f430f21e6","name":"Loop Over Items1"},{"parameters":{"operation":"delete","tableId":"document_rows","filters":{"conditions":[{"keyName":"dataset_id","condition":"eq","keyValue":"={{ $('Set File ID1').item.json.file_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[160,680],"id":"bdc94386-5281-4135-9d4f-941536a8d1ef","name":"Delete Old Data Rows1","alwaysOutputData":true,"executeOnce":true,"credentials":{"supabaseApi":{"id":"CuhGSK9VpbyZF6T4","name":"Supabase RAG Vector"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID1').item.json.file_id }}","title":"={{ $('Set File ID1').item.json.file_title }}","url":"={{ $('Set File ID1').item.json.file_url }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[620,680],"id":"f8389b8e-a406-4311-8f19-2a983dd67e98","name":"Insert Document Metadata1","executeOnce":true,"credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_rows","mode":"list","cachedResultName":"document_rows"},"columns":{"mappingMode":"defineBelow","value":{"dataset_id":"={{ $('Set File ID1').item.json.file_id }}","row_data":"={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"dataset_id","displayName":"dataset_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"row_data","displayName":"row_data","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[1040,1200],"id":"85f5253a-82c2-4f95-be20-7671fb5a5f03","name":"Insert Table Rows1","credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID1').item.json.file_id }}","schema":"={{ $json.schema }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[1660,980],"id":"cbd1fb99-c4db-4a8e-ac2e-2bcc26db5b18","name":"Update Schema for Document Metadata1","credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"jsCode":"// Suponiendo que el texto del documento está en 'item.json.text'\nconst text = $input.first().json.text; // Asegúrate de que este campo contenga el texto extraído\nconst numPages = $input.first().json.numpages; // Número total de páginas\nconst pages = text.split('\\n\\n'); // Dividir el texto en páginas (ajusta según el formato)\n\n// Asegúrate de que el número de páginas coincida con el número de fragmentos\nif (pages.length !== numPages) {\n    throw new Error('El número de páginas no coincide con el texto extraído.');\n}\n\nreturn pages.map((page, index) => ({\n    page_number: index + 1,\n    content: page,\n}));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1320,700],"id":"4e03984f-1d37-4de2-b6b3-ff324467d221","name":"Code"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[1080,680],"id":"3b77feba-d9f4-4587-b1c2-59b770ff031d","name":"Loop Over Items2"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_references (\n    id SERIAL PRIMARY KEY,\n    document_id INT,  -- ID del documento relacionado\n    page_number INT,  -- Número de página\n    reference_text TEXT,  -- Texto de referencia\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1380,940],"id":"dd692d1d-c0c0-413a-be54-1255dc8d381e","name":"Create Document_references Rows Table (for Tabular Data)","credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_references","mode":"list","cachedResultName":"document_references"},"columns":{"mappingMode":"defineBelow","value":{"page_number":"={{ $json.page_number }}","reference_text":"={{ $json.content }}","document_id":"={{ $('Download File1').item.json.id }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"document_id","displayName":"document_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"page_number","displayName":"page_number","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"reference_text","displayName":"reference_text","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[1580,700],"id":"1384f50e-6471-4825-a501-435a616b965d","name":"Insert Table Rows document_references","credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Use this to query from the document_references table once you know the document_id you are querying. The document_id corresponds to the specific document, and you will use the page_number for filtering, which is a key in the document_references table.\n\nExample Queries:\nRetrieve Reference Text by Document ID and Page Number:\nSQL\n\nif (userQuestion.includes(\"specific topic\")) {\n    const searchTerm = extractSearchTerm(userQuestion); // Función para extraer el término de búsqueda\n    const query = `\n        SELECT reference_text \n        FROM document_references \n        WHERE reference_text ILIKE '%${searchTerm}%';\n    `;\n\n    const results = await executeSQL(query); // Ejecutar la consulta SQL\n\n    if (results.length > 0) {\n        return results; // Devolver el texto encontrado\n    } else {\n        return \"No information found on that topic.\";\n    }\n}","operation":"executeQuery","query":"if (userQuestion.includes(\"specific topic\")) {\n    const searchTerm = extractSearchTerm(userQuestion); // Función para extraer el término de búsqueda\n    const query = `\n        SELECT reference_text \n        FROM document_references \n        WHERE reference_text ILIKE '%${searchTerm}%';\n    `;\n\n    const results = await executeSQL(query); // Ejecutar la consulta SQL\n\n    if (results.length > 0) {\n        return results; // Devolver el texto encontrado\n    } else {\n        return \"No information found on that topic.\";\n    }\n}","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-40,280],"id":"3d6c05fb-3eb2-42fb-9fe9-f966bdfa1340","name":"Query Document reference","credentials":{"postgres":{"id":"KZzNFAsNcYpnW5dN","name":"Postgres Supabase AI-agent"}}},{"parameters":{"operation":"delete","tableId":"document_references","filters":{"conditions":[{"keyName":"document_id","condition":"eq","keyValue":"={{ $('Set File ID1').item.json.file_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[360,680],"id":"2253e064-784e-4f41-9c91-a4904c3cc172","name":"Delete Old Ref Rows","alwaysOutputData":true,"executeOnce":true,"credentials":{"supabaseApi":{"id":"CuhGSK9VpbyZF6T4","name":"Supabase RAG Vector"}}}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"RAG AI Agent","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"RAG AI Agent","type":"ai_memory","index":0},{"node":"When chat message received","type":"ai_memory","index":0}]]},"Edit Fields":{"main":[[{"node":"RAG AI Agent","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"RAG AI Agent":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Create Document Metadata Table":{"main":[[]]},"List Documents":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Get File Contents":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Query Document Rows":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Supabase Vector Store1":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Supabase Vector Store1","type":"ai_embedding","index":0}]]},"Create Documents Table and Match Function":{"main":[[]]},"Default Data Loader1":{"ai_document":[[{"node":"Insert into Supabase Vectorstore1","type":"ai_document","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Insert into Supabase Vectorstore1","type":"ai_embedding","index":0}]]},"Download File1":{"main":[[{"node":"Switch1","type":"main","index":0}]]},"File Created1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"File Updated1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Extract Document Text1":{"main":[[{"node":"Insert into Supabase Vectorstore1","type":"main","index":0}]]},"Delete Old Doc Rows1":{"main":[[{"node":"Delete Old Data Rows1","type":"main","index":0}]]},"Set File ID1":{"main":[[{"node":"Delete Old Doc Rows1","type":"main","index":0}]]},"Extract PDF Text1":{"main":[[{"node":"Loop Over Items2","type":"main","index":0},{"node":"Insert into Supabase Vectorstore1","type":"main","index":0}]]},"Aggregate1":{"main":[[{"node":"Summarize1","type":"main","index":0}]]},"Character Text Splitter1":{"ai_textSplitter":[[{"node":"Default Data Loader1","type":"ai_textSplitter","index":0}]]},"Summarize1":{"main":[[{"node":"Set Schema1","type":"main","index":0},{"node":"Insert into Supabase Vectorstore1","type":"main","index":0}]]},"Switch1":{"main":[[{"node":"Extract PDF Text1","type":"main","index":0}],[{"node":"Extract from Excel1","type":"main","index":0}],[{"node":"Extract from CSV1","type":"main","index":0}],[{"node":"Extract Document Text1","type":"main","index":0}]]},"Insert into Supabase Vectorstore1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Extract from Excel1":{"main":[[{"node":"Aggregate1","type":"main","index":0},{"node":"Insert Table Rows1","type":"main","index":0}]]},"Set Schema1":{"main":[[{"node":"Update Schema for Document Metadata1","type":"main","index":0}]]},"Extract from CSV1":{"main":[[{"node":"Aggregate1","type":"main","index":0},{"node":"Insert Table Rows1","type":"main","index":0}]]},"Loop Over Items1":{"main":[[],[{"node":"Set File ID1","type":"main","index":0}]]},"Delete Old Data Rows1":{"main":[[{"node":"Delete Old Ref Rows","type":"main","index":0}]]},"Insert Document Metadata1":{"main":[[{"node":"Download File1","type":"main","index":0}]]},"Code":{"main":[[{"node":"Loop Over Items2","type":"main","index":0},{"node":"Insert Table Rows document_references","type":"main","index":0}]]},"Loop Over Items2":{"main":[[],[{"node":"Code","type":"main","index":0}]]},"Query Document reference":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Delete Old Ref Rows":{"main":[[{"node":"Insert Document Metadata1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:File Created":{"lastTimeChecked":"2025-03-14T01:56:17Z"},"node:File Updated":{"lastTimeChecked":"2025-03-14T01:56:17Z"},"node:File Created1":{"lastTimeChecked":"2025-03-16T03:59:49Z"},"node:File Updated1":{"lastTimeChecked":"2025-03-16T03:59:49Z"}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"549576c4-e664-4691-a0f3-9a62992ca734","triggerCount":5,"tags":[{"createdAt":"2024-11-27T05:11:34.741Z","updatedAt":"2025-03-14T02:30:06.292Z","id":"lkTQ85NNYkbxB1mk","name":"PROD"},{"createdAt":"2025-03-09T20:55:49.059Z","updatedAt":"2025-03-09T20:55:49.059Z","id":"PSzxqxK1fqjymxjo","name":"DORA"}]}