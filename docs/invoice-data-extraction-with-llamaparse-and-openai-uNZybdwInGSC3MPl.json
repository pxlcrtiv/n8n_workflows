{"createdAt":"2025-03-15T05:27:29.571Z","updatedAt":"2025-03-15T06:15:23.708Z","id":"uNZybdwInGSC3MPl","name":"Invoice data extraction with LlamaParse and OpenAI","active":false,"nodes":[{"parameters":{"model":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"gpt-4o-mini"},"options":{"temperature":0}},"id":"7076854e-c7e8-45b5-9e5e-16678bffa254","name":"OpenAI Model","type":"@n8n/n8n-nodes-langchain.lmOpenAi","position":[2100,600],"typeVersion":1,"credentials":{"openAiApi":{"id":"SaBv7WVgrDu3Ao1X","name":"OpenAi account"}}},{"parameters":{"jsonSchema":"{\n  \"Invoice date\": { \"type\": \"date\" },\n  \"invoice number\": { \"type\": \"string\" },\n  \"Purchase order number\": { \"type\": \"string\" },\n  \"Supplier name\": { \"type\": \"string\" },\n  \"Supplier address\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"address 1\": { \"type\": \"string\" },\n      \"address 2\": { \"type\": \"string\" },\n      \"city\": { \"type\": \"string\" },\n      \"postcode\": { \"type\": \"string\" }\n    }\n  },\n  \"Supplier VAT identification number\": { \"type\": \"string\" },\n  \"Customer name\": { \"type\": \"string\" },\n  \"Customer address\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"address 1\": { \"type\": \"string\" },\n      \"address 2\": { \"type\": \"string\" },\n      \"city\": { \"type\": \"string\" },\n      \"postcode\": { \"type\": \"string\" }\n    }\n  },\n  \"Customer VAT identification number\": { \"type\": \"string\" }, \n  \"Shipping addresses\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"address 1\": { \"type\": \"string\" },\n        \"address 2\": { \"type\": \"string\" },\n        \"city\": { \"type\": \"string\" },\n        \"postcode\": { \"type\": \"string\" }\n      }\n    }\n  },\n  \"Line items\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"price\": \"number\",\n      \"discount\": \"number\"\n    }\n  },\n  \"Subtotal without VAT\": { \"type\": \"number\" },\n  \"Subtotal with VAT\": { \"type\": \"number\" },\n  \"Total price\": { \"type\": \"number\" }\n}"},"id":"00819f1c-2c60-4b7c-b395-445ec05fd898","name":"Structured Output Parser","type":"@n8n/n8n-nodes-langchain.outputParserStructured","position":[2285.9740588781942,580.0279776308931],"typeVersion":1.1},{"parameters":{"method":"POST","url":"https://api.cloud.llamaindex.ai/api/parsing/upload","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"accept","value":"application/json"}]},"sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"file","inputDataFieldName":"=attachment_0"}]},"options":{}},"id":"3b40d506-aabc-4105-853a-a318375cea73","name":"Upload to LlamaParse","type":"n8n-nodes-base.httpRequest","position":[1280,480],"typeVersion":4.2,"credentials":{"httpHeaderAuth":{"id":"n6x3SrurN4tzLUYX","name":"Header Auth Llamaindex"}}},{"parameters":{"content":"## 2. Advanced PDF Processing with LlamaParse\n[Read more about using HTTP Requests](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/)\n\nLlamaIndex's LlamaCloud is a cloud-based service that allows you to upload,\nparse, and index document. LlamaParse is a tool offered by LlamaCloud\nto parse for complex PDFs with embedded objects ie PDF Tables and figures.\n\nAt time of writing, you can parse 1000 pdfs/day with LlamaCloud's free plan\nby signing up at [https://cloud.llamaindex.ai/](https://cloud.llamaindex.ai/?ref=n8n.io).\n\n[documentation llamaindex](https://docs.cloud.llamaindex.ai/llamaparse/parsing/parsing_modes)\n","height":783,"width":786,"color":7},"id":"57a5d331-8838-4d44-8fac-a44dba35fcc4","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[1220,160],"typeVersion":1},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"simple":false,"filters":{"q":"has:attachment","sender":"invoice+statements+acct_1M2AUnF3Kn0LqxpP@stripe.com"},"options":{"downloadAttachments":true}},"id":"a4504d83-da3b-41bc-891f-f8f9314a6af5","name":"Receiving Invoices","type":"n8n-nodes-base.gmailTrigger","position":[120,-100],"typeVersion":1,"credentials":{"gmailOAuth2":{"id":"TDGC962mg5h85KHo","name":"Gmail account"}}},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"1_TdPlfirO7nOyERGu4gOOPT4JrKPx4YrSwVGViPviYo","mode":"list","cachedResultName":"analisis statement bank","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1_TdPlfirO7nOyERGu4gOOPT4JrKPx4YrSwVGViPviYo/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Hoja 1","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1_TdPlfirO7nOyERGu4gOOPT4JrKPx4YrSwVGViPviYo/edit#gid=0"},"columns":{"mappingMode":"autoMapInputData","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"02bd4636-f35b-4a3a-8a5f-9ae7aeed2bf4","name":"Append to Reconciliation Sheet","type":"n8n-nodes-base.googleSheets","position":[2645.9740588781942,420.02797763089313],"typeVersion":4.3,"credentials":{"googleSheetsOAuth2Api":{"id":"aEdSCFYMafgqbWmJ","name":"Google Sheets account"}}},{"parameters":{"url":"=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"accept","value":"application/json"}]},"options":{}},"id":"cdb0a7ee-068d-465a-b4ae-d5221d5e7400","name":"Get Processing Status","type":"n8n-nodes-base.httpRequest","position":[1485.9740588781945,520.0279776308931],"typeVersion":4.2,"credentials":{"httpHeaderAuth":{"id":"n6x3SrurN4tzLUYX","name":"Header Auth Llamaindex"}}},{"parameters":{"amount":1},"id":"b68a01ab-d8e6-42f4-ab1d-81e746695eef","name":"Wait to stay within service limits","type":"n8n-nodes-base.wait","position":[1805.9740588781945,660.0279776308931],"webhookId":"17a96ed6-b5ff-47bb-a8a2-39c1eb40185a","typeVersion":1.1},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"300fce8c-b19a-4d0c-86e8-f62853c70ce2","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.status }}","rightValue":"SUCCESS"}],"combinator":"and"},"renameOutput":true,"outputKey":"SUCCESS"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"e6058aa0-a3e2-4ce3-9bed-6ff41a5be052","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.status }}","rightValue":"ERROR"}],"combinator":"and"},"renameOutput":true,"outputKey":"ERROR"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"ceb6338f-4261-40ac-be11-91f61c7302ba","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.status }}","rightValue":"CANCELED"}],"combinator":"and"},"renameOutput":true,"outputKey":"CANCELED"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"0fa97d86-432a-409a-917e-5f1a002b1ab9","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.status }}","rightValue":"PENDING"}],"combinator":"and"},"renameOutput":true,"outputKey":"PENDING"}]},"options":{"allMatchingOutputs":true}},"id":"41bd28d2-665a-4f71-a456-98eeb26b6655","name":"Is Job Ready?","type":"n8n-nodes-base.switch","position":[1645.9740588781945,520.0279776308931],"typeVersion":3},{"parameters":{"content":"## 1. Watch for Invoice Emails\n[Read more about Gmail Triggers](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger)\n\nThe Gmail node can watch for all incoming messages and filter based on a condition. We'll set our Gmail node to wait for:\n* a message from particular email address.\n* having an attachment which should be the invoice PDF\n* not having a label \"invoice synced\", which is what we use to avoid duplicate processing.","height":1050,"width":1149,"color":7},"id":"f7157abe-b1ee-46b3-adb2-1be056d9d75d","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[40,-360],"typeVersion":1},{"parameters":{"content":"## 3. Use LLMs to Extract Values from Data\n[Read more about Basic LLM Chain](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm/)\n\nLarge language models are perfect for data extraction tasks as they can work across a range of document layouts without human intervention. The extracted data can then be sent to a variety of datastores such as spreadsheets, accounting systems and/or CRMs.\n\n**Tip:** The \"Structured Output Parser\" ensures the AI output can be\ninserted to our spreadsheet without additional clean up and/or formatting. ","height":656.5014186128178,"width":805.0578351924228,"color":7},"id":"ff7cb6e4-5a60-4f12-b15e-74e7a4a302ce","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[2045.9740588781945,170.5159042208436],"typeVersion":1},{"parameters":{"content":"## 4. Add Label to Avoid Duplication\n[Read more about working with Gmail](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.gmail/)\n\nTo finish off the workflow, we'll add the \"invoice synced\" label to the original invoice email to flag that the extraction was successful. This can be useful if working with a shared inbox and for quality control purposes later.","height":440.3435768155051,"width":362.3535748101346,"color":7},"id":"fe7fdb90-3c85-4f29-a7d3-16f927f48682","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[2885.9740588781942,257.6797019755466],"typeVersion":1},{"parameters":{"content":"## Try Me Out!\n\n**This workflow does the following:**\n* Waits for email invoices with PDF attachments.\n* Uses the LlamaParse service to convert the invoice PDF into a markdown file.\n* Uses a LLM to extract invoice data from the Markdown file.\n* Exports the extracted data to a Google Sheet.\n\n### Follow along with the blog here\nhttps://blog.n8n.io/how-to-extract-data-from-pdf-to-excel-spreadsheet-advance-parsing-with-n8n-io-and-llamaparse/\n\n### Good to know\n* You'll need to create the label \"invoice synced\" in gmail before using this workflow.\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\n\nHappy Hacking!","height":573.2443601155958,"width":360.0244620907562},"id":"1acf2c60-c2b9-4f78-94a4-0711c8bd71ab","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[-360,20],"typeVersion":1},{"parameters":{"operation":"addLabels","messageId":"={{ $('Receiving Invoices').item.json.id }}","labelIds":["IMPORTANT"]},"id":"3802c538-acf9-48d8-b011-bfe2fb817350","name":"Add \"invoice synced\" Label","type":"n8n-nodes-base.gmail","position":[3005.9740588781942,500.02797763089313],"typeVersion":2.1,"webhookId":"d036198c-05c3-49d9-90f9-3c8b2c604dfb","credentials":{"gmailOAuth2":{"id":"TDGC962mg5h85KHo","name":"Gmail account"}}},{"parameters":{"url":"=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}/result/markdown","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","options":{"redirect":{"redirect":{}}}},"id":"ffabd8c5-c440-4473-8e44-b849426c70cf","name":"Get Parsed Invoice Data","type":"n8n-nodes-base.httpRequest","position":[1845.9740588781945,380.02797763089313],"typeVersion":4.2,"credentials":{"httpHeaderAuth":{"id":"n6x3SrurN4tzLUYX","name":"Header Auth Llamaindex"}}},{"parameters":{"mode":"raw","jsonOutput":"={{ $json.output }}","options":{}},"id":"5f9b507f-4dc1-4853-bf71-a64f2f4b55c1","name":"Map Output","type":"n8n-nodes-base.set","position":[2445.9740588781942,420.02797763089313],"typeVersion":3.3},{"parameters":{"promptType":"define","text":"=Given the following invoice in the <invoice> xml tags, extract the following information as listed below.\nIf you cannot the information for a specific item, then leave blank and skip to the next. \n\n* Invoice date\n* invoice number\n* Purchase order number\n* Supplier name\n* Supplier address\n* Supplier VAT identification number\n* Customer name\n* Customer address\n* Customer VAT identification number\n* Shipping addresses\n* Line items, including a description of the goods or services rendered\n* Price with and without VAT\n* Total price\n\n<invoice>{{ $json.markdown }}</invoice>","hasOutputParser":true},"id":"d22744cd-151d-4b92-b4f2-4a5b9ceb4ee7","name":"Apply Data Extraction Rules","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[2105.9740588781942,420.02797763089313],"typeVersion":1.4},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"e5649a2b-6e12-4cc4-8001-4639cc9cc2c2","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $input.item.binary.attachment_0.mimeType }}","rightValue":"application/pdf"},{"id":"4c57ab9b-b11c-455a-a63d-daf48418b06e","operator":{"type":"array","operation":"notContains","rightType":"any"},"leftValue":"={{ $json.labels }}","rightValue":"invoice synced"}],"combinator":"and"},"options":{}},"id":"3735a124-9fab-4400-8b94-8b5aa9f951fe","name":"Should Process Email?","type":"n8n-nodes-base.if","position":[620,540],"typeVersion":2},{"parameters":{"fieldToSplitOut":"labelIds","options":{}},"id":"12a23527-39f3-4f72-8691-3d5cf59f9909","name":"Split Out Labels","type":"n8n-nodes-base.splitOut","position":[320,-100],"typeVersion":1},{"parameters":{"resource":"label","operation":"get","labelId":"={{ $json.labelIds }}"},"id":"88ff6e22-d3d3-403d-b0b2-2674487140a7","name":"Get Labels Names","type":"n8n-nodes-base.gmail","position":[320,100],"typeVersion":2.1,"webhookId":"556115cc-2283-44c0-a5e0-f97a815eb6bc","credentials":{"gmailOAuth2":{"id":"TDGC962mg5h85KHo","name":"Gmail account"}}},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"name","renameField":true,"outputFieldName":"labels"}]},"options":{}},"id":"88accb8e-6531-40be-8d35-1bba594149af","name":"Combine Label Names","type":"n8n-nodes-base.aggregate","position":[320,320],"typeVersion":1},{"parameters":{"mode":"combine","combinationMode":"multiplex","options":{}},"id":"d233ff33-cabf-434e-876d-879693ecaf58","name":"Email with Label Names","type":"n8n-nodes-base.merge","position":[320,540],"typeVersion":2.1},{"parameters":{"content":"\n\n\n\n\n\n\n\n\n\n\n\n**Need more attributes?**\nChange it here!","height":213.73043662572252,"width":192.26896179623753},"id":"733fc285-e069-4e4e-b13e-dfc1c259ac12","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[2225.9740588781942,560.0279776308931],"typeVersion":1},{"parameters":{"content":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🚨**Required**\n* Set Your Google Sheet URL here\n* Set the Name of your Sheet\n\n\n**Don't use GSheets?**\nSwap this for Excel, Airtable or a Database!","height":397.0641952938746,"width":258.29345180972877},"id":"83aa6ed0-ce3b-48d7-aded-475c337ae86e","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","position":[2565.9740588781942,400.02797763089313],"typeVersion":1},{"parameters":{"content":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🚨**Required**\n* Change the email filters here!","height":274.6295678979021,"width":174.50671517518518},"id":"720070f6-2d6c-45ef-80c2-e950862a002b","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","position":[80,-120],"typeVersion":1}],"connections":{"Map Output":{"main":[[{"node":"Append to Reconciliation Sheet","type":"main","index":0}]]},"OpenAI Model":{"ai_languageModel":[[{"node":"Apply Data Extraction Rules","type":"ai_languageModel","index":0}]]},"Is Job Ready?":{"main":[[{"node":"Get Parsed Invoice Data","type":"main","index":0}],null,null,[{"node":"Wait to stay within service limits","type":"main","index":0}]]},"Get Labels Names":{"main":[[{"node":"Combine Label Names","type":"main","index":0}]]},"Split Out Labels":{"main":[[{"node":"Get Labels Names","type":"main","index":0}]]},"Receiving Invoices":{"main":[[{"node":"Split Out Labels","type":"main","index":0},{"node":"Email with Label Names","type":"main","index":0}]]},"Combine Label Names":{"main":[[{"node":"Email with Label Names","type":"main","index":1}]]},"Upload to LlamaParse":{"main":[[{"node":"Get Processing Status","type":"main","index":0}]]},"Get Processing Status":{"main":[[{"node":"Is Job Ready?","type":"main","index":0}]]},"Should Process Email?":{"main":[[{"node":"Upload to LlamaParse","type":"main","index":0}]]},"Email with Label Names":{"main":[[{"node":"Should Process Email?","type":"main","index":0}]]},"Get Parsed Invoice Data":{"main":[[{"node":"Apply Data Extraction Rules","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"Apply Data Extraction Rules","type":"ai_outputParser","index":0}]]},"Apply Data Extraction Rules":{"main":[[{"node":"Map Output","type":"main","index":0}]]},"Append to Reconciliation Sheet":{"main":[[{"node":"Add \"invoice synced\" Label","type":"main","index":0}]]},"Wait to stay within service limits":{"main":[[{"node":"Get Processing Status","type":"main","index":0}]]}},"settings":{},"staticData":null,"meta":{"templateId":"2320"},"pinData":{},"versionId":"3b107336-1be7-468b-861b-63b943b83bbb","triggerCount":0,"tags":[]}